'use strict';

{{#backend.express}}
//import your models here

const example = require('../models');

// create controllers here
  {{#backend.mongoDB}}
  exports.getExamples = async (req, res) => {
    try {
      const data = await example.find();
      res.status(201);
      res.send(data);
    } catch (e) {
      res.status(500);
      res.send(e);
    }
  };

  exports.postExample = async (req, res) => {
    try {
      const data = await example.create(req.body);
      res.status(201)
      res.send(data)
    } catch (e) {
      res.status(500)
      res.send(e)
    }
  };

  exports.deleteOne = async (req, res) => {
    try {
      const { _id } = req.params;
      await topic.findByIdAndDelete(_id);
      res.status(200);
      res.send('Deleted');
    } catch (e) {
      console.log('e', e); // eslint-disable-line no-console
      res.status(500);
      res.send(e);
    }
  };

  exports.updateOne = async (req, res) => {
    try {
      const { _id, name } = req.params;
      let sentimentVotes;
      const updatedExample = await example.findByIdAndUpdate(_id, {
        name: name
      }, {new: true});
      res.status(200);
      res.send(updatedExample);
    } catch (e) {
      res.status(500);
      res.send(e);
    }
  };

  {{/backend.mongoDB}}

  {{#backend.postgreSQL}}

  exports.getExamples = async (req, res) => {
    try {
      const data = await db.Example.findAll();
      res.status(201);
      res.send(data);
    } catch (e) {
      res.status(500);
      res.send(e);
    }
  };

  exports.postExample = async (req, res) => {
    const { title } = req.body;
    try {
      const data = await db.Example.create({
        name: exmpl.name,
        content: exmpl.content
      });
      res.status(201)
      res.send(data)
    } catch (e) {
      res.status(500)
      res.send(e)
    }
  };
  {{/backend.postgreSQL}}
{{/backend.express}}

{{#backend.koa}}
//import your models here

const example = require('../models');

// create controllers here

  {{#backend.mongoDB}}
  exports.getExamples = async (ctx) => {
    try {
      ctx.body = await example.find();
      ctx.status = 201;
    } catch (e) {
      ctx.body = e;
      ctx.status = 500;
    }
  };

  export.postExample = async (ctx) => {
    try {
      const newExmpl = example.create(ctx.request.body);
      ctx.status = 201;
    } catch (err) {
      ctx.body = err;
      ctx.status = 500;
    }
  };
  {{/backend.mongoDB}}

  {{#backend.postgreSQL}}

  exports.getExamples = async ctx => {
    try {
      ctx.body = await db.Example.findAll();
      ctx.status = 201;
    } catch (e) {
      ctx.status = 500;
      // Further handle your error on the back-end
    }
  };

  exports.postExample = async ctx => {
    const exmpl = ctx.request.body;
    try {
      const newExmpl = await db.Example.create({
        name: exmpl.name,
        content: exmpl.content
      });
      ctx.body = newExmpl;
      ctx.status = 200;
    } catch (e) {
      ctx.status = 500;
      // Further handle your error on the back-end
    }
  };
  {{/backend.postgreSQL}}
{{/backend.koa}}